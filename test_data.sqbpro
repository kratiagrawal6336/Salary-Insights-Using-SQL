<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/HP/OneDrive/Desktop/Buzzparade/Archive/KratiAgrawal_FinalPackage/test_data.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1392"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainEmployee"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="120"/><column index="2" value="103"/><column index="3" value="99"/><column index="4" value="96"/><column index="5" value="143"/><column index="6" value="158"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Main">
/* # DATA ANALYSIS */ 
-- Display Employee and Salary TABLE 

SELECT * from Employee;
select * from salary;
-- the data has been imported correctly.


/* Q.1 Display combined employee and salary table  */

-- Using Inner Join to combine salary table and employee table
select e.*, s.* from employee e INNER JOIN salary s on e.EMPLOYEE_ID=s.employee_id;


/* Q.2 Calculate average salary per month  */

--Removing ',' from salary column of salary table for correct calulation
UPDATE salary set  salary= replace(salary, ',','');

SELECT strftime('%Y-%m', disbursement_date) AS month,
       AVG(salary) AS average_salary
FROM salary
GROUP BY month
ORDER BY month;


/* Q.3 Display the name and mobile number of employees whose salary is above 1 lakh */
SELECT
    e.first_name || ' ' || e.last_name AS full_name,
    e.Phone_Number, s.salary
FROM
    employee e 
JOIN
    salary s ON e.employee_id = s.employee_id
WHERE
    s.salary&gt;100000 group by e.first_name || ' ' || e.last_name;

	

/* Q. 4 List of employess who had an annual increment in salary over a period of 2 years and calcualte their average increment*/

-- part 1: List of employess who had an annual increment in salary over a period of 2 years
SELECT 
    employee_id,
    MAX(CASE WHEN year = 2012 THEN annual_salary END) AS AnnualSalary_2012,
    MAX(CASE WHEN year = 2013 THEN annual_salary END) AS AnnualSalary_2013,
    MAX(CASE WHEN year = 2014 THEN annual_salary END) AS AnnualSalary_2014,
	MAX(CASE WHEN year = 2014 THEN annual_salary END) - MAX(CASE WHEN year = 2012 THEN annual_salary END)  as AnnualIncrement_In2years
FROM (
    SELECT
        employee_id,
        CAST(strftime('%Y', disbursement_date) AS INTEGER) AS year,
        SUM(salary) AS annual_salary
    FROM SALARY
    GROUP BY employee_id, year
) AS SalarySummary
GROUP BY employee_id
HAVING AnnualSalary_2014 &gt; AnnualSalary_2012
ORDER BY employee_id;

--part 2: Average increment 
SELECT AVG(AnnualIncrement_In2years) AS Average_Incement FROM (
SELECT 
    employee_id,
    MAX(CASE WHEN year = 2012 THEN annual_salary END) AS AnnualSalary_2012,
    MAX(CASE WHEN year = 2013 THEN annual_salary END) AS AnnualSalary_2013,
    MAX(CASE WHEN year = 2014 THEN annual_salary END) AS AnnualSalary_2014,
	MAX(CASE WHEN year = 2014 THEN annual_salary END) - MAX(CASE WHEN year = 2012 THEN annual_salary END)  as AnnualIncrement_In2years
FROM (
    SELECT
        employee_id,
        CAST(strftime('%Y', disbursement_date) AS INTEGER) AS year,
        SUM(salary) AS annual_salary
    FROM SALARY
    GROUP BY employee_id, year
) AS SalarySummary
GROUP BY employee_id
HAVING AnnualSalary_2014 &gt; AnnualSalary_2012
ORDER BY employee_id);



/* Q. 5 Calculate average incement given to employees per year*/

--part 1: Calcualte incement in 2013 and 2014 for all the employees
SELECT
    employee_id,
	MAX(CASE WHEN year = 2014 THEN annual_salary END) - MAX(CASE WHEN year = 2013 THEN annual_salary END)  as Increment_2014,
	MAX(CASE WHEN year = 2013 THEN annual_salary END) - MAX(CASE WHEN year = 2012 THEN annual_salary END)  as Increment_2013
FROM (
    SELECT
        employee_id,
        CAST(strftime('%Y', disbursement_date) AS INTEGER) AS year,
        SUM(salary) AS annual_salary
    FROM SALARY
    GROUP BY employee_id, year
) AS SalarySummary
GROUP BY employee_id HAVING Increment_2014 &gt; 0 and Increment_2013 &gt; 0
ORDER BY employee_id;

--part 2: calcualte average of the incements in 2013 and 2014
SELECT AVG(Increment_2014) as Avg_increment_2014, AVG(Increment_2013) as Avg_increment_2013 FROM(
SELECT
    employee_id,
	MAX(CASE WHEN year = 2014 THEN annual_salary END) - MAX(CASE WHEN year = 2013 THEN annual_salary END)  as Increment_2014,
	MAX(CASE WHEN year = 2013 THEN annual_salary END) - MAX(CASE WHEN year = 2012 THEN annual_salary END)  as Increment_2013
FROM (
    SELECT
        employee_id,
        CAST(strftime('%Y', disbursement_date) AS INTEGER) AS year,
        SUM(salary) AS annual_salary
    FROM SALARY 
    GROUP BY employee_id, year 
) AS SalarySummary 
GROUP BY employee_id HAVING Increment_2014 &gt; 0 and Increment_2013 &gt; 0
ORDER BY employee_id 
);

</sql><current_tab id="0"/></tab_sql></sqlb_project>
